{"version":3,"sources":["components/filter/Filter.module.css","components/contactListItem/ContactListItem.module.css","components/container/Container.module.css","components/contactList/ContactList.module.css","components/contactForm/ContactForm.module.css","components/container/Container.js","components/contactForm/ContactForm.js","components/filter/Filter.js","components/contactListItem/ContactListItem.js","components/contactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","ContactForm","state","name","number","nameInputId","shortid","generate","phoneNumberInputId","handleInputChange","event","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","label","type","input","onChange","pattern","title","required","id","autoComplete","button","color","size","Component","Filter","filter","ContactListItem","onDeleteContact","contactsItem","onClick","ContactList","contacts","contactList","map","App","addContact","newContact","find","contact","toast","warn","success","deleteContact","contactId","prevState","error","changeFilter","getVisibleContacts","normalizedFilter","toLowerCase","includes","visibleContacts","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4740b1ee.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1FrEN\",\"label\":\"Filter_label__1bASL\",\"input\":\"Filter_input__2FxRv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactListItem_contactsItem__2lyvc\",\"button\":\"ContactListItem_button__Cilek\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__21bzB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1iOYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"ContactForm_label__1kzD0\",\"input\":\"ContactForm_input__3wELS\",\"button\":\"ContactForm_button__3DNHU\"};","import s from \"./Container.module.css\";\r\n\r\nfunction Container({ children }) {\r\n  return <div className={s.container}>{children}</div>;\r\n}\r\n\r\nexport default Container;","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport { ImCheckmark } from \"react-icons/im\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    nameInputId = shortid.generate();\r\n    phoneNumberInputId = shortid.generate();\r\n\r\n    handleInputChange = (event) => {\r\n        const { name, value } = event.currentTarget;\r\n        this.setState({ [name]: value , id: shortid.generate()});\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        this.props.onSubmit(this.state);\r\n        this.reset();\r\n    };\r\n\r\n    reset = () => {\r\n        this.setState({ name: '', number: '' });\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n          <form onSubmit = {this.handleSubmit}>\r\n          <label htmlFor = {this.nameInputId} className={s.label}>\r\n            Name\r\n          <input\r\n            type=\"text\"\r\n            name=\"name\"\r\n            className={s.input}\r\n            value={this.state.name}\r\n            onChange = {this.handleInputChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            id={this.nameInputId}\r\n            autoComplete = \"off\"\r\n          />\r\n           </label>\r\n                \r\n            <label htmlFor={this.phoneNumberInputId} className={s.label}>\r\n            Number \r\n            <input\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            className={s.input}\r\n            value={this.state.number}\r\n            onChange = {this.handleInputChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n            id={this.phoneNumberInputId}\r\n            autoComplete = \"off\"\r\n        />       \r\n           </label>\r\n                \r\n          <button\r\n          className={s.button}\r\n          type=\"submit\"\r\n          >\r\n            Add contact  <ImCheckmark color=\"rgb(11, 100, 11)\" size=\"30px\"/>\r\n          </button>\r\n        </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactForm;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ value, onChange }) => (\r\n  <div className = {s.filter}>\r\n  <label className={s.label}>\r\n    Find contacts by name\r\n    <input type=\"text\" value={value} onChange={onChange} className={s.input}/>\r\n  </label>\r\n  </div>\r\n);\r\n\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Filter;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ImCross, ImRadioChecked2 } from \"react-icons/im\";\r\nimport s from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, id, onDeleteContact }) => {\r\n    return (\r\n            <li\r\n            className={s.contactsItem}\r\n            >\r\n            <ImRadioChecked2 color=\"rgb(11, 100, 11)\" size=\"10px\"/> {name}:  {number}\r\n            \r\n            <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={() => onDeleteContact(id)}\r\n            >\r\n            <ImCross color=\"rgb(190, 12, 27)\" size=\"30px\"/>\r\n            </button>\r\n            </li>\r\n    )\r\n};\r\n\r\nContactListItem.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    number: PropTypes.string.isRequired,\r\n    onDeleteContact: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default ContactListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport s from \"./ContactList.module.css\";\r\n\r\nimport ContactListItem from '../contactListItem/ContactListItem';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n    <ul className={s.contactList}>\r\n        {contacts.map(({ name, number, id }) => (\r\n            <ContactListItem\r\n                key={id}\r\n                id={id}\r\n                name={name}\r\n                number={number}\r\n                onDeleteContact={onDeleteContact}\r\n            />\r\n        ))}\r\n  </ul>\r\n);\r\n\r\nContactList.propTypes = {\r\n    contacts: PropTypes.array,\r\n}\r\n\r\nexport default ContactList;","//import './App.css';\nimport React, { Component } from 'react';\nimport { ToastContainer, toast } from 'react-toastify';\n\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport Container from './components/container/Container';\nimport ContactForm from './components/contactForm/ContactForm';\nimport Filter from './components/filter/Filter';\nimport ContactList from './components/contactList/ContactList';\nclass App extends Component {\n  state = {\n     contacts: [\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\n  ],\n    filter: ''\n  }\n\n  addContact = (newContact) => {\n    if (this.state.contacts.find(contact => contact.name === newContact.name)) {\n      toast.warn(`${newContact.name} is already in your phonebook!`);\n      return;\n    }\n\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n\n    toast.success(`${newContact.name} has been added to your phonebook!`);\n  };\n\n  deleteContact = (contactId) => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n    toast.error(\"Contact deleted from your phonebook!\");\n  };\n\n  changeFilter = (event) => {\n    this.setState({ filter: event.currentTarget.value });\n  }\n\n  getVisibleContacts = () => {\n    const { filter, contacts } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n  \n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    \n    return (\n      <Container>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} />\n        <ToastContainer\n          position=\"top-right\"\n          autoClose={3000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable\n          pauseOnHover\n          />\n        <h2>Contacts</h2>\n        <Filter value={this.state.filter} onChange={this.changeFilter} />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n     </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}